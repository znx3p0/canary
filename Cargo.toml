[package]
name = "canary"
version = "0.1.6"
edition = "2021"

repository = "https://github.com/znx3p0/canary"
keywords = [ "rpc", "async", "network", "microservices", "api" ]
description = "provides ergonomic abstractions for network communication; communication backend of Canary"
license = "MIT"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
derive_more = "0.99"
futures-lite = "1"
futures = "0.3"

# serde
serde = { version = "1", features = [ "derive" ] }
serde_repr = "0.1"

# formats
bincode = { version = "1" }
serde_json = { version = "1" }
bson = { version = "2.0.1" }
postcard = { version = "0.7.2", features = [ "alloc" ] }

# encryption
snow = "0.9.0" # api may change
rand = "0.8.4"

tracing = "0.1.30"
cfg-if = "1"
compact_str = { version = "0.2.0", features = [ "serde" ] }

async_t = { version = "0.6.0", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# network runtimes
async-std = { version = "1", optional = true }
tokio = { version = "1", features = [ "net", "io-util", "time" ], optional = true }

# websocket support
async-tungstenite = { version = "0.16.1" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwasm = { version = "0.4.0" }
getrandom = { version = "~0.2.4", features = [ "js" ] }
uuid = { version = "~0.8.2", features = [ "wasm-bindgen" ] }
async-timer = "0.7.4"

[features]
async-std-net = [ "async-std", "async-tungstenite/async-std-runtime" ]
tokio-net = [ "tokio", "async-tungstenite/tokio-runtime" ]
nightly = [ "async_t" ] # use nightly features for extra goodies
default = [ "tokio-net", "nightly" ]
