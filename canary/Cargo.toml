[package]
name = "canary"
version = "0.1.6"
edition = "2021"

repository = "https://github.com/znx3p0/canary"
keywords = [ "rpc", "async", "network", "microservices", "api" ]
description = "distributed systems library for making communications through the network easier"
license = "MIT"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# internal communications
serde = { version = "1", features = [ "derive", "rc" ] }
serde_repr = "0.1"
bincode = { version = "1" }

# routes
dashmap = "5" # stable api
once_cell = "1" # stable api
compact_str = { version = "0.2", features = [ "serde" ] }

# runtime
async-std = { version = "1", features = [ "unstable" ], optional = true } # stable api
tokio = { version = "1", features = [ "rt-multi-thread", "macros", "time" ], optional = true } # stable api
tracing = "0.1" # stable api
ahash = "0.7" # faster hashing for routes

# ergonomics
canary-macro = { path = "../canary-macro", version = "0.1.3" }

# communications
igcp = { path = "../igcp", version = "0.1.4", default-features = false }

# compile time
derive_more = "0.99" # stable api
cfg-if = "1.0.0"

# providers
camino = "1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-tungstenite = { version = "0.16.1" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwasm = "0.4.0"

# encryption
rand = "0.8"
snow = "0.8.0" # api may change

[lib]
doctest = false

[features]
tokio-rt = [ "tokio", "igcp/tokio-net", "async-tungstenite/tokio-runtime" ]
async-std-rt = [ "async-std", "igcp/async-std-net", "async-tungstenite/async-std-runtime" ]
wasm = [ "igcp/wasm" ]
single-threaded = []
default = [ "tokio-rt", "single-threaded" ]

# default = [ "async-std-rt" ]